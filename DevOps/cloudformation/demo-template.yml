heat_template_version: 2015-10-15
description: Launch a basic instance 

parameters:
  NetID:
    type: string
    description: Network ID to use for the instance.
    default: provider
  key_name:
    type: string
    label: Key Name
    description: Name of key-pair to be used for compute instance
    default: mykey
  image_id:
    type: string
    label: Image ID
    description: Image to be used for compute instance
    default: ubuntu-18.04
  instance_type:
    type: string
    label: Instance Type
    default: m2.tiny
    description: Type of instance (flavor) to be used  

resources:
  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Add security group rules for server
      name: redirector-security-group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
        - remote_ip_prefix: 0.0.0.0/0
          protocol: udp
          port_range_min: 443
          port_range_max: 443
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 443
          port_range_max: 443
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
        - remote_ip_prefix: 0.0.0.0/0
          protocol: udp
          port_range_min: 80
          port_range_max: 80

  web_01:
    type: OS::Nova::Server
    properties:
      image: { get_param: image_id }
      flavor: { get_param: instance_type }
      key_name: { get_param: key_name }
      networks:
      - network: { get_param: NetID }
      security_groups:
        - { get_resource: server_security_group }
      user_data: 
        str_replace:
            template: |
              #!/bin/bash 
              apt-get install -y nginx
              service nginx start
            params: {}

  web_02:
    type: OS::Nova::Server
    properties:
        image: { get_param: image_id }
        flavor: { get_param: instance_type }
        key_name: { get_param: key_name }
        networks:
        - network: { get_param: NetID }
        security_groups:
          - { get_resource: server_security_group }

  volume_01:
    type: OS::Cinder::Volume
    properties:
      size: 10
      
  attachment_01:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid:  { get_resource: web_01 }
      volume_id: { get_resource: volume_01 }

  volume_02:
    type: OS::Cinder::Volume
    properties:
      size: 10  
      
  attachment_02:
    type: OS::Cinder::VolumeAttachment
    properties:
      instance_uuid:  { get_resource: web_02 }
      volume_id: { get_resource: volume_02 }
